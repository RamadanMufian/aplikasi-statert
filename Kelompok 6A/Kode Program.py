# -*- coding: utf-8 -*-
"""Statisika Terapan_Kel 6A

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BhSIpDa-8NuL6GHB_dqWGZXV4hl5wvP5
"""

import math
from scipy.stats import norm, t

# Fungsi untuk menghitung rata-rata
def hitung_rata_rata(data):
    return sum(data) / len(data)

# Fungsi untuk menghitung simpangan baku
def hitung_simpangan_baku(data, rata_rata):
    jumlah = sum((nilai - rata_rata) ** 2 for nilai in data)
    return math.sqrt(jumlah / (len(data) - 1))

# Fungsi untuk menghitung statistik uji Z dua populasi
def hitung_statistik_z(rata1, rata2, sigma1, sigma2, n1, n2):
    return (rata1 - rata2) / math.sqrt((sigma1 ** 2 / n1) + (sigma2 ** 2 / n2))

# Fungsi untuk menghitung statistik uji t untuk varians sama
def hitung_statistik_t_sama(rata1, rata2, s1, s2, n1, n2):
    sp2 = ((n1 - 1) * s1 ** 2 + (n2 - 1) * s2 ** 2) / (n1 + n2 - 2)
    return (rata1 - rata2) / math.sqrt(sp2 * (1 / n1 + 1 / n2))

# Fungsi untuk menghitung statistik uji t untuk varians berbeda
def hitung_statistik_t_beda(rata1, rata2, s1, s2, n1, n2):
    pembilang = rata1 - rata2
    penyebut = math.sqrt((s1 ** 2 / n1) + (s2 ** 2 / n2))
    return pembilang / penyebut

# Fungsi untuk menghitung statistik uji t untuk populasi dependen
def hitung_statistik_t_dependen(sebelum, sesudah):
    selisih = [sesudah[i] - sebelum[i] for i in range(len(sebelum))]
    rata_rata_d = hitung_rata_rata(selisih)
    simpangan_baku_d = hitung_simpangan_baku(selisih, rata_rata_d)
    return rata_rata_d / (simpangan_baku_d / math.sqrt(len(selisih)))

# Validasi input angka
def input_angka(prompt, tipe=float, positif=True):
    while True:
        try:
            angka = tipe(input(prompt))
            if positif and angka <= 0:
                print("Harap masukkan angka positif.")
                continue
            return angka
        except ValueError:
            print("Input tidak valid. Harap masukkan angka.")

# Fungsi utama
def main():
    print("Kelompok 6A | Statistika Terapan | Informatika | 2024\n")
    print("== Kalkulator Uji Hipotesis Rataan 2 Populasi ==")
    print("========================================")
    print("1. Uji Z (Ragam POP (varians) Diketahui)")
    print("2. Uji T (Ragam POP (varians) Sama)")
    print("3. Uji T (Ragam POP (varians) Berbeda)")
    print("4. Uji T Dependen (Paired T-Test)")
    print("========================================")

    pilihan = input_angka("Pilih jenis uji (1-4): ", int)

    alpha = input_angka("Masukkan nilai alpha (misal 0.05): ")

    if pilihan == 1:
        rata1 = input_angka("Masukkan rata-rata sampel pertama (X̄1): ")
        rata2 = input_angka("Masukkan rata-rata sampel kedua (X̄2): ")
        sigma1 = input_angka("Masukkan simpangan baku populasi pertama (σ1): ")
        sigma2 = input_angka("Masukkan simpangan baku populasi kedua (σ2): ")
        n1 = input_angka("Masukkan ukuran sampel pertama (n1): ", int)
        n2 = input_angka("Masukkan ukuran sampel kedua (n2): ", int)

        z_stat = hitung_statistik_z(rata1, rata2, sigma1, sigma2, n1, n2)
        z_kritis = norm.ppf(1 - alpha / 2)

        print(f"\nStatistik Uji Z: {z_stat}")
        print(f"Nilai Z-Kritis: ±{z_kritis:.4f}")
        if abs(z_stat) > z_kritis:
            print("Tolak H0: Ada perbedaan yang signifikan.")
        else:
            print("Terima H0: Tidak ada perbedaan yang signifikan.")

    elif pilihan == 2 or pilihan == 3:
        rata1 = input_angka("Masukkan rata-rata sampel pertama (X̄1): ")
        rata2 = input_angka("Masukkan rata-rata sampel kedua (X̄2): ")
        s1 = input_angka("Masukkan simpangan baku sampel pertama (S1): ")
        s2 = input_angka("Masukkan simpangan baku sampel kedua (S2): ")
        n1 = input_angka("Masukkan ukuran sampel pertama (n1): ", int)
        n2 = input_angka("Masukkan ukuran sampel kedua (n2): ", int)

        if pilihan == 2:
            t_stat = hitung_statistik_t_sama(rata1, rata2, s1, s2, n1, n2)
            df = n1 + n2 - 2
        else:
            t_stat = hitung_statistik_t_beda(rata1, rata2, s1, s2, n1, n2)
            df = min(n1 - 1, n2 - 1)

        t_kritis = t.ppf(1 - alpha / 2, df)
        print(f"\nStatistik Uji T: {t_stat}")
        print(f"Nilai T-Kritis: ±{t_kritis:.4f}")
        if abs(t_stat) > t_kritis:
            print("Tolak H0: Ada perbedaan yang signifikan.")
        else:
            print("Terima H0: Tidak ada perbedaan yang signifikan.")

    elif pilihan == 4:
        n = input_angka("Masukkan jumlah pasangan data: ", int)
        sebelum = [input_angka(f"Data sebelum {i+1}: ") for i in range(n)]
        sesudah = [input_angka(f"Data setelah {i+1}: ") for i in range(n)]

        t_stat = hitung_statistik_t_dependen(sebelum, sesudah)
        df = n - 1
        t_kritis = t.ppf(1 - alpha / 2, df)

        print(f"\nStatistik Uji T (Dependen): {t_stat}")
        print(f"Nilai T-Kritis: ±{t_kritis:.4f}")
        if abs(t_stat) > t_kritis:
            print("Tolak H0: Ada perbedaan yang signifikan.")
        else:
            print("Terima H0: Tidak ada perbedaan yang signifikan.")

    else:
        print("Pilihan tidak valid. Harap pilih angka antara 1-4.")

if __name__ == "__main__":
    main()